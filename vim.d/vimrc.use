let g:deoplete#enable_at_startup = 1
let g:coc_disable_startup_warning = 1
""let g:copilot_enabled = 1

let g:fzf_vim = {}

"Plug 'ludovicchabant/vim-copilot'
call plug#begin('~/.local/share/nvim/plugged')

Plug 'sainnhe/sonokai'


Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'


Plug 'roxma/vim-hug-neovim-rpc'
"Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }


Plug 'jackMort/ChatGPT.nvim'
Plug     'MunifTanjim/nui.nvim'
Plug     'nvim-lua/plenary.nvim'
Plug     'nvim-telescope/telescope.nvim'


Plug 'nvim-lua/plenary.nvim'
Plug 'MunifTanjim/nui.nvim'
"Plug 'dpayne/CodeGPT.nvim'


Plug 'morhetz/gruvbox'
Plug 'habamax/vim-pire'
Plug  'nicolasacquaviva/better-default'
Plug 'tyrannicaltoucan/vim-quantum'
"colorshceme gruvbox    
Plug 'hrsh7th/nvim-cmp'
"Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
Plug 'zchee/deoplete-jedi'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
""Plug 'jiangmiao/auto-pairs'
Plug 'christoomey/vim-tmux-navigator'

Plug 'preservim/nerdtree'
Plug 'preservim/nerdcommenter' 

"Plug 'vim-airline/vim-airline'
"let g:airline_theme='badwolf'  "ÂèØ‰ª•Ëá™ÂÆö‰πâ‰∏ªÈ¢òÔºåËøôÈáå‰ΩøÁî® badwolf

Plug 'kkoomen/vim-doge'
Plug 'preservim/nerdcommenter' 
Plug 'jsit/toast.vim' 
Plug 'sainnhe/everforest'


Plug 'preservim/nerdtree', { 'on': 'NERDTreeToggle' }
Plug 'junegunn/vim-easy-align'

""""""""""
Plug 'neovim/nvim-lspconfig'
Plug 'hrsh7th/cmp-nvim-lsp'
Plug 'hrsh7th/cmp-buffer'
Plug 'hrsh7th/cmp-path'
Plug 'hrsh7th/cmp-cmdline'
Plug 'hrsh7th/nvim-cmp'

" For vsnip users.
Plug 'hrsh7th/cmp-vsnip'
Plug 'hrsh7th/vim-vsnip'

" For luasnip users.
" Plug 'L3MON4D3/LuaSnip'
" Plug 'saadparwaiz1/cmp_luasnip'

" For ultisnips users.
" Plug 'SirVer/ultisnips'
" Plug 'quangnguyen30192/cmp-nvim-ultisnips'

" For snippy users.
" Plug 'dcampos/nvim-snippy'
" Plug 'dcampos/cmp-snippy'

""""""""""""""""

call plug#end()
set termguicolors       " enable true colors support


"set background=dark " or light if you want light mode
"set background=light" or light if you want light mode

"set background=dark
"set termguicolors
"silent! colorscheme pire

"colorscheme everforest
"colorscheme gruvbox
colorscheme  toast
""colorscheme  quantum
"colorscheme sonokai

set background=dark     " dark theme
"set background=light  " light theme

"let g:gruvbox_contrast_dark = 'soft'
"let g:gruvbox_contrast_dark = 'hard'

""""""""""""""""""""""""

syntax on
filetype plugin on
"set showtabline=2
set tabline=%F\ %y 
set number 
set relativenumber
set ruler
"set rulerformat=%l/[%L]:%v
"let g:rulerformat_filepath_format = '%f'

"hi LineNr  term=bold ctermfg=None cterm=bold ctermfg=black gui=bold  guifg=Black guibg=Red
""hi LineNr  term=none ctermfg=None cterm=none ctermfg=None gui=none  guifg=None guibg=None
""hi LineNr  term=none ctermfg=None cterm=none ctermfg=None gui=none  guifg=darkmagenta guibg=None
"hi LineNr  term=none ctermfg=None cterm=none ctermfg=None gui=none  guifg=#601066 guibg=None
"hi LineNr  term=bold ctermfg=None cterm=bold ctermfg=DarkMagenta  gui=bold  guifg=Black guibg=Red
"hi LineNr  term=bold ctermfg=None cterm=bold ctermfg=130  gui=bold  guifg=Black guibg=Red
"hi CursorLineNr  term=bold ctermbg=Red cterm=bold ctermfg=White gui=bold  guifg=Black guibg=Red
"hi CursorLineNr  term=bold ctermbg=None cterm=bold ctermfg=White gui=bold  guifg=Black guibg=Red
"hi CursorLineNr  term=bold ctermbg=None cterm=bold ctermfg=White gui=bold  guifg=Black guibg=None
hi  LineNr  term=none ctermfg=None cterm=none ctermfg=None gui=none  guifg=#53656e 

"set cursorline
"hi CursorLine term=bold cterm=bold guibg=NONE
"hi CursorLine term=none cterm=none  guibg=#21282b
"hi CursorLine term=none cterm=none  guibg=#212A2E
"hi CursorLine term=none cterm=none  guibg=#333f45
"hi CursorLine term=none ctermfg=red


"set cursorcolumn

hi statusline guifg=Magenta guibg=Black  ctermfg=Magenta ctermbg=Black 

"hi Normal  ctermfg=White  guifg=White guifg=Black  ctermbg=Black guibg=#E4E1CF ctermbg=Black      
"
"hi CursorLineNr  term=bold ctermbg=Red cterm=bold ctermfg=White gui=bold  guifg=Black guibg=Red
"hi CursorLineNr  term=bold ctermbg=Red cterm=bold ctermfg=White gui=bold  guifg=Black guibg=Red
hi CursorLineNr  term=bold ctermbg=Red cterm=bold ctermfg=White gui=bold  guifg=Red guibg=NONE
hi statusline  term=None ctermbg=Red cterm=none ctermfg=White gui=none  guifg=magenta guibg=black

"set statusline+=\ \ \ \ \ \ [\ %l\ ]:[\ %v\ ]\ \ \ \ \ \ %p%%\ %L\ \ \ \ \ %F
"set statusline+=\ \ \ \ \ \ [\ %l\ ]:[\ %v\ ]\ \ \ \ \ \ %p%%\ %L\ \ \ \ \ %{expand('%:p')}
"set statusline+=\ \ \ \ \ \ [\ %l\ ]:[\ %v\ ]\ \ \ \ \ %p%%/%L\ \ \ \ %{hostname()}\ \ \ \ \ %{expand('%:p')}
"""set statusline+=\ \ \ \ \ \ \ \ \ %l\ \ %v\ \ \ \ \ \ %p%%\ \ %L\ \ \ \ %{hostname()}\ \ \ \ \ %{expand('%:p')}
""""set statusline+=\ \ \ \ \ \ \ \ \ %l\ \ %v\ \ \ \ \ \ %p%%\ \ %L\ \ \ \ üçé\ %{hostname()}\ \ \ \ \ %{expand('%:p')}
"""set statusline+=\ \ \ \ \ \ \ \ \ %l\ \ %v\ \ %t\ \ \ \ %p%%\ \ %L\ \ \ \ üçé\ %{hostname()}\ \ \ \ \ %{expand('%:p')}

set laststatus=2

""set statusline+=\ \ \ \ \ \ \ %p%%\ \ %L\ \ %t\ \ %lüçé%v\ \ %{hostname()}\ %{expand('%:p')}
set statusline+=\ \ \ \ \ \ \ %p%%\ \ %L\ \ %t\ \ %l-%v\ \ \ %{hostname()}\ %{expand('%:p')}


"hi Normal     ctermfg=blue  guifg=blue guifg=#22e3dd  ctermbg=Black guibg=#283237  ctermbg=Black
"hi Normal     ctermfg=blue  guifg=blue guifg=#13e8e1  ctermbg=Black guibg=#283237  ctermbg=Black

"hi Normal     ctermfg=blue  guifg=blue guifg=#22e3dd  ctermbg=Black guibg=#283237  ctermbg=Black
"hi Normal     ctermfg=blue  guifg=blue guifg=#13e8e1  ctermbg=Black guibg=#283237  ctermbg=Black
"hi Normal     ctermfg=blue  guifg=blue guifg=#13e8e1  ctermbg=Black guibg=#283237  ctermbg=Black
"i Normal     ctermfg=blue  guifg=blue guifg=#07f59e ctermbg=Black guibg=#283237  ctermbg=Black
"hi Normal     ctermfg=blue  guifg=blue guifg=#0ff51e ctermbg=Black guibg=#283237  ctermbg=Black
"

"hi Normal     ctermfg=blue  guifg=blue guifg=#25f540 ctermbg=Black guibg=#283237  ctermbg=Black
"hi Normal     ctermfg=blue  guifg=blue guifg=#25f540   ctermbg=None guibg=NONE  ctermbg=None
"
"hi Normal     ctermfg=blue  guifg=blue guifg=#25f540   ctermbg=None guibg=#283237  ctermbg=None
"2024-05-06_14-51-31 here
hi Normal     ctermfg=blue  guifg=blue guifg=#09F418 ctermbg=None guibg=#283237  ctermbg=None

"inoremap <silent><expr> <TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
"inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

"noremap <silent><expr> <Tab>
"     \ pumvisible() ? "\<C-n>" : "\<TAB>"
"noremap <silent><expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-TAB>"

""
""imap <c-space> <Plug>(asyncomplete_force_refresh)
""inoremap <expr> <Tab>   pumvisible() ? "\<C-n>" : "\<Tab>"
""inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
""inoremap <expr> <cr>    pumvisible() ? asyncomplete#close_popup() : "\<cr>"
""
""inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm() : "\<CR>"





inoremap <Tab> <C-n>


""""""""""""""""set viminfo='100000000000,<1000000000000000,s100,h 
""""""""""""""""""""""""""set viminfo='1000000000,<100000000000,s100000000000

map <D-v> "+p
map <D-c> "+y

nnoremap ff <C-F>
nnoremap ee <C-B>
nnoremap <D-o> <C-o>
nnoremap <M-o> <C-o>
"map <D-o> <C-o>


let g:clipboard = {
      \   'name': 'xsel',
      \   'copy': {
      \      '+': 'xsel --clipboard --input',
      \      '*': 'xsel --primary --input',
      \    },
      \   'paste': {
      \      '+': 'xsel --clipboard --output',
      \      '*': 'xsel --primary --output',
      \    },
      \   'cache_enabled': 0,
      \ }


nnoremap <F3> :let @/=@/ <Bar> %s//&/gn<CR>

"""   https://github.com/linuxnomas/linux_scripts/blob/main/.vimrc  """
" enable mouse support "
"set mouse=a


set hlsearch
set ignorecase
set smartcase
set showmatch
" remove trailing whitespace from Python and Fortran files "
autocmd BufWritePre *.py :%s/\s\+$//e
autocmd BufWritePre *.f90 :%s/\s\+$//e
autocmd BufWritePre *.f95 :%s/\s\+$//e
autocmd BufWritePre *.for :%s/\s\+$//e

set cursorline
set cursorcolumn
hi CursorLine guibg=#505050 ctermbg=NONE
hi CursorColumn guibg=#505050 ctermbg=NONE





let g:ackprg = 'ag --nogroup --nocolor --column'


set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" add your plugins here
Plugin 'mileszs/ack.vim'

call vundle#end()            " required
filetype plugin indent on    " required


highlight Visual cterm=none ctermbg=yellow  guibg=#faf4be




" Increase the maximum number of lines to yank
set viminfo='10000,<1000000

" Increase the undo levels
set undolevels=1000000

" Enable persistent undo
if has('persistent_undo')
  set undofile
  set undodir=~/.vim/undo
endif

" Increase the maximum memory usage for pattern matching
set maxmempattern=2000000

" Disable syntax highlighting for large files
autocmd BufReadPre * if getfsize(expand("%")) > 10000000 | syntax off | endif

" Increase the maximum number of columns to display
set maxfuncdepth=10000

"autocmd CursorMoved * exe printf('match IncSearch /\V\<%s\>/', escape(expand('<cword>'), '/\'))

"highlight IncSearch gui=bold guifg=#8B0000 guibg=#FFB6C1 cterm=bold ctermfg=NONE ctermbg=NONE 
highlight IncSearch gui=bold guifg=#8B0000 guibg=#FFEFD5  cterm=bold ctermfg=NONE ctermbg=NONE 
autocmd CursorMoved * exe printf('match IncSearch /\V\<%s\>/', escape(expand('<cword>'), '/\'))  




" Function to run Black formatter
function! BlackFormat()
    if executable('black')
        try
            silent! undojoin | %!black -q -
        catch /.*/
            echohl ErrorMsg | echo "Black formatting failed" | echohl None
        endtry
    endif
endfunction

" Updated WritePython function to precisely preserve cursor position
function! WritePython()
    " Save the current cursor position (line and column)
    let l:pos = getpos('.')

    " Call the Black formatter
    call BlackFormat()

    " Write the buffer to file
    write

    " Restore the cursor position
    call setpos('.', l:pos)
endfunction

function! WriteQuitPython()
    call BlackFormat()
    write
    quit
endfunction

" Map custom commands for Python files only
autocmd FileType python cnoreabbrev <buffer> w :call WritePython()<CR>
autocmd FileType python cnoreabbrev <buffer> wq :call WriteQuitPython()<CR>

" Reset writeany for non-Python files
autocmd BufEnter * if &filetype != 'python' | set nowriteany | endif


highlight Function ctermfg=213 guifg=#ff5fff
